<?xml version="1.0" encoding="UTF-8"?><unit name="Test11" xmlns:ot="urn:kpmy:ot"><constant name="hi"><constant-expression type="STRING">Hi</constant-expression></constant><constant name="WEIGHT"><constant-expression type="TYPE"><ot:object cls="TYPE"><ot:object cls="BASE"><ot:object cls="INTEGER"></ot:object></ot:object></ot:object></constant-expression></constant><variable name="w" type="USER" id="WEIGHT"/><variable name="x" type="INTEGER"/><block name="Do" exported="false" infix="false"><sequence><if><branch><condition><dyadic-op op="&gt;"><left><select-expression><selector module="Test11" name="x"></selector></select-expression></left><right><constant-expression type="INTEGER">0</constant-expression></right></dyadic-op></condition><assign><expression><constant-expression type="INTEGER">0</constant-expression></expression><selector module="Test11" name="x"></selector></assign></branch><branch><condition><dyadic-op op="="><left><select-expression><selector module="Test11" name="x"></selector></select-expression></left><right><constant-expression type="INTEGER">0</constant-expression></right></dyadic-op></condition><assign><expression><monadic-op op="-"><expression><constant-expression type="INTEGER">1</constant-expression></expression></monadic-op></expression><selector module="Test11" name="x"></selector></assign></branch><else><assign><expression><constant-expression type="INTEGER">10</constant-expression></expression><selector module="Test11" name="x"></selector></assign></else></if></sequence></block><block name="Do0" exported="false" infix="false"><variable name="i" type="INTEGER"/><sequence><while><branch><condition><dyadic-op op="&lt;"><left><select-expression><selector module="Test11" name="i" block="Do0"></selector></select-expression></left><right><constant-expression type="INTEGER">10</constant-expression></right></dyadic-op></condition><call><expression><call-expression module="$std" name="INC"><parameter><select-expression><selector module="Test11" name="i" block="Do0"></selector></select-expression></parameter></call-expression></expression></call></branch><branch><condition><dyadic-op op="&lt;"><left><select-expression><selector module="Test11" name="i" block="Do0"></selector></select-expression></left><right><constant-expression type="INTEGER">20</constant-expression></right></dyadic-op></condition><assign><expression><dyadic-op op="+"><left><select-expression><selector module="Test11" name="i" block="Do0"></selector></select-expression></left><right><constant-expression type="INTEGER">2</constant-expression></right></dyadic-op></expression><selector module="Test11" name="i" block="Do0"></selector></assign></branch></while><assign><expression><select-expression><selector module="Test11" name="i" block="Do0"></selector></select-expression></expression><selector module="Test11" name="x"></selector></assign></sequence></block><block name="Do1" exported="false" infix="false"><variable name="i" type="INTEGER"/><sequence><assign><expression><select-expression><selector module="Test11" name="x"></selector></select-expression></expression><selector module="Test11" name="i" block="Do1"></selector></assign><repeat><branch><condition><dyadic-op op="&gt;="><left><select-expression><selector module="Test11" name="i" block="Do1"></selector></select-expression></left><right><constant-expression type="INTEGER">30</constant-expression></right></dyadic-op></condition><call><expression><call-expression module="$std" name="INC"><parameter><select-expression><selector module="Test11" name="i" block="Do1"></selector></select-expression></parameter></call-expression></expression></call></branch></repeat><assign><expression><select-expression><selector module="Test11" name="i" block="Do1"></selector></select-expression></expression><selector module="Test11" name="x"></selector></assign></sequence></block><start><assign><expression><constant-expression type="INTEGER">10</constant-expression></expression><selector module="Test11" name="w"></selector></assign><assign><expression><constant-expression type="INTEGER">10</constant-expression></expression><selector module="Test11" name="x"></selector></assign><call><expression><call-expression module="Test11" name="Do"></call-expression></expression></call><call><expression><call-expression module="Test11" name="Do"></call-expression></expression></call><call><expression><call-expression module="Test11" name="Do"></call-expression></expression></call><call><expression><call-expression module="Test11" name="Do0"></call-expression></expression></call><call><expression><call-expression module="Test11" name="Do1"></call-expression></expression></call></start></unit>